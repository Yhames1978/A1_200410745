// <auto-generated />
using A1_200410745.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace A1_200410745.Migrations
{
    [DbContext(typeof(A1_200410745Context))]
    partial class A1_200410745ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("A1_200410745.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("AnimalId");

                    b.ToTable("Animal");

                    b.HasData(
                        new { AnimalId = 1, Description = "Very Cute", Name = "Cat" },
                        new { AnimalId = 2, Description = "Hairy", Name = "Dog" }
                    );
                });

            modelBuilder.Entity("A1_200410745.Models.PetFood", b =>
                {
                    b.Property<int>("PetFoodId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalId");

                    b.Property<string>("Brand")
                        .IsRequired();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("NutritionalInformation")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<decimal>("Weight");

                    b.HasKey("PetFoodId");

                    b.HasIndex("AnimalId");

                    b.ToTable("PetFood");

                    b.HasData(
                        new { PetFoodId = 1, AnimalId = 2, Brand = "Prime", Description = "Yummy Dog Food", Name = "Doggy Best", NutritionalInformation = "High in vitamins", Price = 13.00m, Weight = 4m },
                        new { PetFoodId = 2, AnimalId = 1, Brand = "One", Description = "High End Cat Food", Name = "One Cat Food", NutritionalInformation = "Made only from Chiken", Price = 14.00m, Weight = 20m }
                    );
                });

            modelBuilder.Entity("A1_200410745.Models.PetFood", b =>
                {
                    b.HasOne("A1_200410745.Models.Animal", "PetFoodAnimal")
                        .WithMany("GetPetFoods")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
